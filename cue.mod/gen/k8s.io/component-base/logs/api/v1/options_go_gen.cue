// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go k8s.io/component-base/logs/api/v1

package v1

// LogFlushFreqDefault is the default for the corresponding command line
// parameter.
#LogFlushFreqDefault: int & 5000000000

// LogFlushFreqFlagName is the name of the command line parameter.
// Depending on how flags get added, it is either a stand-alone
// value (logs.AddFlags) or part of LoggingConfiguration.
#LogFlushFreqFlagName: "log-flush-frequency"

#ReapplyHandlingType: int // #enumReapplyHandlingType

#enumReapplyHandlingType:
	#ReapplyHandlingError |
	#ReapplyHandlingIgnoreUnchanged

#values_ReapplyHandlingType: {
	ReapplyHandlingError:           #ReapplyHandlingError
	ReapplyHandlingIgnoreUnchanged: #ReapplyHandlingIgnoreUnchanged
}

// ReapplyHandlingError is the default: calling ValidateAndApply or
// ValidateAndApplyWithOptions again returns an error.
#ReapplyHandlingError: #ReapplyHandlingType & 0

// ReapplyHandlingIgnoreUnchanged silently ignores any additional calls of
// ValidateAndApply or ValidateAndApplyWithOptions if the configuration
// is unchanged, otherwise they return an error.
#ReapplyHandlingIgnoreUnchanged: #ReapplyHandlingType & 1

// LoggingOptions can be used with ValidateAndApplyWithOptions to override
// certain global defaults.
#LoggingOptions: {
	// ErrorStream can be used to override the os.Stderr default.
	ErrorStream: _

	// InfoStream can be used to override the os.Stdout default.
	InfoStream: _
}

_#parameters: {
	C?:                       null | #LoggingConfiguration @go(,*LoggingConfiguration)
	Options?:                 null | #LoggingOptions       @go(,*LoggingOptions)
	ContextualLoggingEnabled: bool
}

// flagSet is the interface implemented by pflag.FlagSet, with
// just those methods defined which are needed by addFlags.
_#flagSet: _
