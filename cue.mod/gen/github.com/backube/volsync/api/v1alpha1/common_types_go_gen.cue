// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/backube/volsync/api/v1alpha1

package v1alpha1

// CopyMethodType defines the methods for creating point-in-time copies of
// volumes.
// +kubebuilder:validation:Enum=Direct;None;Clone;Snapshot
#CopyMethodType: string // #enumCopyMethodType

#enumCopyMethodType:
	#CopyMethodDirect |
	#CopyMethodNone |
	#CopyMethodClone |
	#CopyMethodSnapshot

// CopyMethodDirect indicates a copy should not be performed. Data will be copied directly to/from the PVC.
#CopyMethodDirect: #CopyMethodType & "Direct"

// CopyMethodNone indicates a copy should not be performed. Deprecated (replaced by CopyMethodDirect).
#CopyMethodNone: #CopyMethodType & "None"

// CopyMethodClone indicates a copy should be created using volume cloning.
#CopyMethodClone: #CopyMethodType & "Clone"

// CopyMethodSnapshot indicates a copy should be created using a volume
// snapshot.
#CopyMethodSnapshot: #CopyMethodType & "Snapshot"

// Namespace annotation to indicate that elevated permissions are ok for movers
#PrivilegedMoversNamespaceAnnotation: "volsync.backube/privileged-movers"

#ConditionSynchronizing:     "Synchronizing"
#SynchronizingReasonSync:    "SyncInProgress"
#SynchronizingReasonSched:   "WaitingForSchedule"
#SynchronizingReasonManual:  "WaitingForManual"
#SynchronizingReasonCleanup: "CleaningUp"
#SynchronizingReasonError:   "Error"

// SyncthingPeer Defines the necessary information needed by VolSync
// to configure a given peer with the running Syncthing instance.
#SyncthingPeer: {
	// The peer's address that our Syncthing node will connect to.
	address: string @go(Address)

	// The peer's Syncthing ID.
	ID: string

	// A flag that determines whether this peer should
	// introduce us to other peers sharing this volume.
	// It is HIGHLY recommended that two Syncthing peers do NOT
	// set each other as introducers as you will have a difficult time
	// disconnecting the two.
	introducer: bool @go(Introducer)
}

// SyncthingPeerStatus Is a struct that contains information pertaining to
// the status of a given Syncthing peer.
#SyncthingPeerStatus: {
	// The address of the Syncthing peer.
	address: string @go(Address)

	// ID Is the peer's Syncthing ID.
	ID: string

	// Flag indicating whether peer is currently connected.
	connected: bool @go(Connected)

	// The ID of the Syncthing peer that this one was introduced by.
	introducedBy?: string @go(IntroducedBy)

	// A friendly name to associate the given device.
	name?: string @go(Name)
}

#MoverResult: string // #enumMoverResult

#enumMoverResult:
	#MoverResultSuccessful |
	#MoverResultFailed

#MoverResultSuccessful: #MoverResult & "Successful"
#MoverResultFailed:     #MoverResult & "Failed"

#MoverStatus: {
	result?: #MoverResult @go(Result)
	logs?:   string       @go(Logs)
}

#CustomCASpec: {
	// The name of a Secret that contains the custom CA certificate
	// If SecretName is used then ConfigMapName should not be set
	secretName?: string @go(SecretName)

	// The name of a ConfigMap that contains the custom CA certificate
	// If ConfigMapName is used then SecretName should not be set
	configMapName?: string @go(ConfigMapName)

	// The key within the Secret or ConfigMap containing the CA certificate
	key?: string @go(Key)
}
