// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/1Password/onepassword-operator/api/v1

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// OnePasswordItemSpec defines the desired state of OnePasswordItem
#OnePasswordItemSpec: {
	itemPath?: string @go(ItemPath)
}

#OnePasswordItemConditionType: string // #enumOnePasswordItemConditionType

#enumOnePasswordItemConditionType:
	#OnePasswordItemReady

// OnePasswordItemReady means the Kubernetes secret is ready for use.
#OnePasswordItemReady: #OnePasswordItemConditionType & "Ready"

#OnePasswordItemCondition: {
	// Type of job condition, Completed.
	type: #OnePasswordItemConditionType @go(Type)

	// Status of the condition, one of True, False, Unknown.
	status: metav1.#ConditionStatus @go(Status)

	// Last time the condition transit from one status to another.
	// +optional
	lastTransitionTime?: metav1.#Time @go(LastTransitionTime)

	// Human-readable message indicating details about last transition.
	// +optional
	message?: string @go(Message)
}

// OnePasswordItemStatus defines the observed state of OnePasswordItem
#OnePasswordItemStatus: {
	conditions: [...#OnePasswordItemCondition] @go(Conditions,[]OnePasswordItemCondition)
}

// OnePasswordItem is the Schema for the onepassworditems API
#OnePasswordItem: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// Kubernetes secret type. More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
	type?:   string                 @go(Type)
	spec?:   #OnePasswordItemSpec   @go(Spec)
	status?: #OnePasswordItemStatus @go(Status)
}

// OnePasswordItemList contains a list of OnePasswordItem
#OnePasswordItemList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#OnePasswordItem] @go(Items,[]OnePasswordItem)
}
