// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cert-manager/cert-manager/pkg/apis/config/shared/v1alpha1

package v1alpha1

#LeaderElectionConfig: {
	// If true, cert-manager will perform leader election between instances to
	// ensure no more than one instance of cert-manager operates at a time
	enabled?: null | bool @go(Enabled,*bool)

	// Namespace used to perform leader election. Only used if leader election is enabled
	namespace?: string @go(Namespace)

	// The duration that non-leader candidates will wait after observing a leadership
	// renewal until attempting to acquire leadership of a led but unrenewed leader
	// slot. This is effectively the maximum duration that a leader can be stopped
	// before it is replaced by another candidate. This is only applicable if leader
	// election is enabled.
	leaseDuration?: null | #Duration @go(LeaseDuration,*Duration)

	// The interval between attempts by the acting master to renew a leadership slot
	// before it stops leading. This must be less than or equal to the lease duration.
	// This is only applicable if leader election is enabled.
	renewDeadline?: null | #Duration @go(RenewDeadline,*Duration)

	// The duration the clients should wait between attempting acquisition and renewal
	// of a leadership. This is only applicable if leader election is enabled.
	retryPeriod?: null | #Duration @go(RetryPeriod,*Duration)
}
