// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/grafana/grafana-openapi-client-go/models

package models

import "github.com/go-openapi/strfmt"

// ProvisionedAlertRule provisioned alert rule
//
// swagger:model ProvisionedAlertRule
#ProvisionedAlertRule: {
	// annotations
	// Example: {"runbook_url":"https://supercoolrunbook.com/page/13"}
	annotations?: {[string]: string} @go(Annotations,map[string]string)

	// condition
	// Example: A
	// Required: true
	condition?: null | string @go(Condition,*string)

	// data
	// Example: [{"datasourceUid":"__expr__","model":{"conditions":[{"evaluator":{"params":[0,0],"type":"gt"},"operator":{"type":"and"},"query":{"params":[]},"reducer":{"params":[],"type":"avg"},"type":"query"}],"datasource":{"type":"__expr__","uid":"__expr__"},"expression":"1 == 1","hide":false,"intervalMs":1000,"maxDataPoints":43200,"refId":"A","type":"math"},"queryType":"","refId":"A","relativeTimeRange":{"from":0,"to":0}}]
	// Required: true
	data: [...null | #AlertQuery] @go(Data,[]*AlertQuery)

	// exec err state
	// Required: true
	// Enum: [OK Alerting Error]
	execErrState?: null | string @go(ExecErrState,*string)

	// folder UID
	// Example: project_x
	// Required: true
	folderUID?: null | string @go(FolderUID,*string)

	// for
	// Required: true
	// Format: duration
	for?: null | strfmt.#Duration @go(For,*strfmt.Duration)

	// id
	id?: int64 @go(ID)

	// is paused
	// Example: false
	isPaused?: bool @go(IsPaused)

	// labels
	// Example: {"team":"sre-team-1"}
	labels?: {[string]: string} @go(Labels,map[string]string)

	// no data state
	// Required: true
	// Enum: [Alerting NoData OK]
	noDataState?: null | string @go(NoDataState,*string)

	// org ID
	// Required: true
	orgID?: null | int64 @go(OrgID,*int64)

	// provenance
	provenance?: #Provenance @go(Provenance)

	// rule group
	// Example: eval_group_1
	// Required: true
	// Max Length: 190
	// Min Length: 1
	ruleGroup?: null | string @go(RuleGroup,*string)

	// title
	// Example: Always firing
	// Required: true
	// Max Length: 190
	// Min Length: 1
	title?: null | string @go(Title,*string)

	// uid
	// Max Length: 40
	// Min Length: 1
	// Pattern: ^[a-zA-Z0-9-_]+$
	uid?: string @go(UID)
}

// ProvisionedAlertRuleExecErrStateOK captures enum value "OK"
#ProvisionedAlertRuleExecErrStateOK: "OK"

// ProvisionedAlertRuleExecErrStateAlerting captures enum value "Alerting"
#ProvisionedAlertRuleExecErrStateAlerting: "Alerting"

// ProvisionedAlertRuleExecErrStateError captures enum value "Error"
#ProvisionedAlertRuleExecErrStateError: "Error"

// ProvisionedAlertRuleNoDataStateAlerting captures enum value "Alerting"
#ProvisionedAlertRuleNoDataStateAlerting: "Alerting"

// ProvisionedAlertRuleNoDataStateNoData captures enum value "NoData"
#ProvisionedAlertRuleNoDataStateNoData: "NoData"

// ProvisionedAlertRuleNoDataStateOK captures enum value "OK"
#ProvisionedAlertRuleNoDataStateOK: "OK"
